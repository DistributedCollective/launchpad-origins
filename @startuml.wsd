@startuml
' -- classes --

abstract SafeMath {
    ' -- inheritance --

    ' -- usingFor --

    ' -- vars --

    ' -- methods --
	#🔍add()
	#🔍sub()
	#🔍mul()
	#🔍div()
	#🔍divCeil()
	#🔍mod()
	#🔍min256()

}
' -- inheritance / usingFor --

class ILockedFund {
    ' -- inheritance --

    ' -- usingFor --

    ' -- vars --

    ' -- methods --
	+addAdmin()
	+removeAdmin()
	+changeVestingRegistry()
	+changeWaitedTS()
	+depositVested()
	+withdrawWaitedUnlockedBalance()
	+createVestingAndStake()
	+createVesting()
	+stakeTokens()
	+withdrawAndStakeTokens()
	+withdrawAndStakeTokensFrom()

}
' -- inheritance / usingFor --

class LockedFund {
    ' -- inheritance --
	{abstract}ILockedFund

    ' -- usingFor --
	{abstract}📚SafeMath for [[uint256]]

    ' -- vars --
	+[[uint256]] waitedTS
	#{static}[[uint256]] MAX_BASIS_POINT
	#{static}[[uint256]] MAX_DURATION
	+{static}[[uint256]] INTERVAL
	+[[IERC20]] token
	+[[IVestingRegistry]] vestingRegistry
	+[[mapping address=>uint256 ]] vestedBalances
	+[[mapping address=>uint256 ]] lockedBalances
	+[[mapping address=>uint256 ]] waitedUnlockedBalances
	+[[mapping address=>uint256 ]] unlockedBalances
	+[[mapping address=>bool ]] isAdmin
	+[[mapping address=>uint256 ]] cliff
	+[[mapping address=>uint256 ]] duration

    ' -- methods --
	+**__constructor__**()
	+addAdmin()
	+removeAdmin()
	+changeVestingRegistry()
	+changeWaitedTS()
	+depositVested()
	+withdrawWaitedUnlockedBalance()
	+createVestingAndStake()
	+createVesting()
	+stakeTokens()
	+withdrawAndStakeTokens()
	+withdrawAndStakeTokensFrom()
	#_addAdmin()
	+_removeAdmin()
	#_changeVestingRegistry()
	#_changeWaitedTS()
	#_depositVested()
	#_withdrawWaitedUnlockedBalance()
	#_createVesting()
	#_createVestingAndStake()
	#🔍_getVesting()
	#_stakeTokens()
	+🔍getWaitedTS()
	+🔍getToken()
	+🔍getVestingDetails()
	+🔍vestedBalance()
	+🔍getLockedBalance()
	+🔍getWaitedUnlockedBalance()
	+🔍getUnlockedBalance()
	+🔍adminStatus()
	+🔍getCliffAndDuration()

}
' -- inheritance / usingFor --
LockedFund --[#DarkGoldenRod]|> ILockedFund
LockedFund ..[#DarkOliveGreen]|> SafeMath : //for uint256//

class IOrigins {
    ' -- inheritance --

    ' -- usingFor --

    ' -- vars --

    ' -- methods --
	+setDepositAddress()
	+setLockedFund()
	+createTier()
	+setTierVerification()
	+setTierDeposit()
	+setTierTokenLimit()
	+setTierTokenAmount()
	+setTierVestOrLock()
	+setTierTime()
	+addressVerification()
	+singleAddressMultipleTierVerification()
	+multipleAddressSingleTierVerification()
	+multipleAddressAndTierVerification()
	+💰buy()
	+withdrawSaleDeposit()
	+🔍getTierCount()
	+🔍getDepositAddress()
	+🔍getToken()
	+🔍getLockDetails()
	+🔍readTierPartA()
	+🔍readTierPartB()
	+🔍getTokensBoughtByAddressOnTier()
	+🔍getParticipatingWalletCountPerTier()
	+🔍getTokensSoldPerTier()
	+🔍checkSaleEnded()
	+🔍isAddressApproved()

}
' -- inheritance / usingFor --

class OriginsAdmin {
    ' -- inheritance --

    ' -- usingFor --

    ' -- vars --
	-[[address]] owners
	-[[address]] verifiers
	-[[mapping address=>bool ]] isOwner
	-[[mapping address=>bool ]] isVerifier

    ' -- methods --
	#**__constructor__**()
	+addOwner()
	+removeOwner()
	+addVerifier()
	+removeVerifier()
	#_addOwner()
	#_removeOwner()
	#_addVerifier()
	#_removeVerifier()
	+🔍checkOwner()
	+🔍checkVerifier()
	+🔍getOwners()
	+🔍getVerifiers()

}
' -- inheritance / usingFor --

class OriginsStorage {
    ' -- inheritance --

    ' -- usingFor --
	{abstract}📚SafeMath for [[uint256]]

    ' -- vars --
	#[[uint256]] tierCount
	#{static}[[uint256]] MAX_BASIS_POINT
	#[[address]] depositAddress
	#[[IERC20]] token
	#[[ILockedFund]] lockedFund
	#[[mapping uint256=>Tier ]] tiers
	#[[mapping address=>mapping uint256=>uint256  ]] tokensBoughtByAddressOnTier
	#[[mapping uint256=>uint256 ]] participatingWalletCountPerTier
	#[[mapping uint256=>uint256 ]] tokensSoldPerTier
	#[[mapping uint256=>bool ]] tierSaleEnded
	#[[mapping address=>mapping uint256=>bool  ]] addressApproved

    ' -- methods --

}
' -- inheritance / usingFor --
OriginsStorage ..[#DarkOliveGreen]|> SafeMath : //for uint256//

class OriginsEvents {
    ' -- inheritance --

    ' -- usingFor --

    ' -- vars --

    ' -- methods --

}
' -- inheritance / usingFor --

class OriginsBase {
    ' -- inheritance --
	{abstract}IOrigins
	{abstract}OriginsAdmin
	{abstract}OriginsEvents
	{abstract}OriginsStorage

    ' -- usingFor --

    ' -- vars --

    ' -- methods --
	+**__constructor__**()
	+setDepositAddress()
	+setLockedFund()
	+createTier()
	+setTierVerification()
	+setTierDeposit()
	+setTierTokenLimit()
	+setTierTokenAmount()
	+setTierVestOrLock()
	+setTierTime()
	+addressVerification()
	+singleAddressMultipleTierVerification()
	+multipleAddressSingleTierVerification()
	+multipleAddressAndTierVerification()
	+💰buy()
	+withdrawSaleDeposit()
	#_setDepositAddress()
	#_setLockedFund()
	#_setTierVerification()
	#_setTierDeposit()
	#_setTierTokenLimit()
	#🔍_getTotalRemainingTokens()
	#_setTierTokenAmount()
	#_setTierVestOrLock()
	#_setTierTime()
	#_addressVerification()
	#_saleAllowed()
	#_updateTierTokenDetailsAfterBuy()
	#_tokenTransferOnBuy()
	#_updateWalletCount()
	#_buy()
	#_withdrawSaleDeposit()
	+🔍getTierCount()
	+🔍getDepositAddress()
	+🔍getToken()
	+🔍getLockDetails()
	+🔍readTierPartA()
	+🔍readTierPartB()
	+🔍getTokensBoughtByAddressOnTier()
	+🔍getParticipatingWalletCountPerTier()
	+🔍getTokensSoldPerTier()
	+🔍checkSaleEnded()
	+🔍isAddressApproved()

}
' -- inheritance / usingFor --
OriginsBase --[#DarkGoldenRod]|> IOrigins
OriginsBase --[#DarkGoldenRod]|> OriginsAdmin
OriginsBase --[#DarkGoldenRod]|> OriginsEvents
OriginsBase --[#DarkGoldenRod]|> OriginsStorage

@enduml